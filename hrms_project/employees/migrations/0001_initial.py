# Generated by Django 4.2.9 on 2025-01-12 04:36

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AssetType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Asset Type',
                'verbose_name_plural': 'Asset Types',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('swift_code', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='CostProfitCenter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Cost/Profit Center',
                'verbose_name_plural': 'Cost/Profit Centers',
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('name_ar', models.CharField(blank=True, max_length=100, null=True, verbose_name='Name (Arabic)')),
                ('code', models.CharField(default='DEPT', max_length=20, unique=True)),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='employees.department')),
            ],
        ),
        migrations.CreateModel(
            name='Division',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('name_ar', models.CharField(max_length=100, verbose_name='Name (Arabic)')),
                ('code', models.CharField(max_length=20, unique=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employees.department')),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_number', models.CharField(default='EMP0001', max_length=20, unique=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='employee_pictures/')),
                ('first_name', models.CharField(default='First', max_length=50)),
                ('middle_name', models.CharField(blank=True, max_length=50, null=True)),
                ('last_name', models.CharField(default='Last', max_length=50)),
                ('first_name_ar', models.CharField(blank=True, max_length=50, null=True, verbose_name='First Name (Arabic)')),
                ('middle_name_ar', models.CharField(blank=True, max_length=50, null=True, verbose_name='Middle Name (Arabic)')),
                ('last_name_ar', models.CharField(blank=True, max_length=50, null=True, verbose_name='Last Name (Arabic)')),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female')], max_length=1, null=True)),
                ('marital_status', models.CharField(blank=True, choices=[('S', 'Single'), ('M', 'Married'), ('D', 'Divorced'), ('W', 'Widowed')], max_length=20, null=True)),
                ('nationality', models.CharField(blank=True, choices=[('ALGERIAN', 'Algerian'), ('AMERICAN', 'American'), ('ARGENTINA', 'Argentina'), ('AUSTRALIAN', 'Australian'), ('BAHRAINI', 'Bahraini'), ('BANGLADESHI', 'Bangladeshi'), ('BELGIAN', 'Belgian'), ('BRAZILIAN', 'Brazilian'), ('BRITISH', 'British'), ('BULGARIAN', 'Bulgarian'), ('CAMEROONIAN', 'Cameroonian'), ('CANADIAN', 'Canadian'), ('CHILEAN', 'Chilean'), ('CHINESE', 'Chinese'), ('COLOMBIAN', 'Colombian'), ('CROATIAN', 'Croatian'), ('CUBAN', 'Cuban'), ('CYPRIOT', 'Cypriot'), ('CZECH', 'Czech'), ('DANISH', 'Danish'), ('DJIBOUTIAN', 'Djiboutian'), ('EGYPTIAN', 'Egyptian'), ('FILIPINO', 'Filipino'), ('FRENCH', 'French'), ('GERMAN', 'German'), ('GHANAIAN', 'Ghanaian'), ('GREEK', 'Greek'), ('DUTCH', 'Dutch'), ('HONG_KONGER', 'Hong Konger'), ('INDIAN', 'Indian'), ('INDONESIAN', 'Indonesian'), ('IRANIAN', 'Iranian'), ('IRAQI', 'Iraqi'), ('IRISH', 'Irish'), ('ITALIAN', 'Italian'), ('JAMAICAN', 'Jamaican'), ('JAPANESE', 'Japanese'), ('JORDANIAN', 'Jordanian'), ('KENYAN', 'Kenyan'), ('KUWAITI', 'Kuwaiti'), ('LEBANESE', 'Lebanese'), ('MALAWIAN', 'Malawian'), ('MALAYSIAN', 'Malaysian'), ('MEXICAN', 'Mexican'), ('MOROCCAN', 'Moroccan'), ('NEPALI', 'Nepali'), ('DUTCH', 'Dutch'), ('NEW_ZEALANDER', 'New Zealander'), ('NIGERIAN', 'Nigerian'), ('NORWEGIAN', 'Norwegian'), ('OMANI', 'Omani'), ('PAKISTANI', 'Pakistani'), ('POLISH', 'Polish'), ('PORTUGUESE', 'Portuguese'), ('RUSSIAN', 'Russian'), ('SAUDI', 'Saudi'), ('SCOTTISH', 'Scottish'), ('SERBIAN', 'Serbian'), ('SEYCHELLOIS', 'Seychellois'), ('SINGAPOREAN', 'Singaporean'), ('SOUTH_AFRICAN', 'South African'), ('SPANISH', 'Spanish'), ('SRI_LANKAN', 'Sri Lankan'), ('SUDANESE', 'Sudanese'), ('SWEDISH', 'Swedish'), ('SWISS', 'Swiss'), ('SYRIAN', 'Syrian'), ('TAIWANESE', 'Taiwanese'), ('TANZANIAN', 'Tanzanian'), ('THAI', 'Thai'), ('TUNISIAN', 'Tunisian'), ('TURKISH', 'Turkish'), ('EMIRATI', 'Emirati'), ('UGANDAN', 'Ugandan'), ('UKRAINIAN', 'Ukrainian'), ('VENEZUELAN', 'Venezuelan'), ('VIETNAMESE', 'Vietnamese'), ('YEMENI', 'Yemeni'), ('ZIMBABWEAN', 'Zimbabwean'), ('OTHER', 'Other')], max_length=50, null=True, verbose_name='Nationality')),
                ('religion', models.CharField(blank=True, max_length=50, null=True)),
                ('education_category', models.CharField(blank=True, max_length=50, null=True)),
                ('cpr_number', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('primary_phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Primary Number')),
                ('secondary_phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Secondary Number')),
                ('address', models.TextField(blank=True, null=True)),
                ('in_probation', models.BooleanField(default=True)),
                ('designation', models.CharField(blank=True, max_length=100, null=True)),
                ('contract_type', models.CharField(blank=True, choices=[('FT', 'Full Time'), ('PT', 'Part Time'), ('CT', 'Contract'), ('INT', 'Intern')], max_length=20, null=True)),
                ('joined_date', models.DateField(blank=True, null=True)),
                ('employee_category', models.CharField(blank=True, choices=[('GEN', 'General'), ('SUP', 'Supervisor'), ('MGR', 'Manager'), ('EXE', 'Executive')], max_length=20, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cost_center', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cost_center_employees', to='employees.costprofitcenter')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='employees.department')),
                ('division', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='employees.division')),
            ],
            options={
                'verbose_name': 'Employee',
                'verbose_name_plural': 'Employees',
                'ordering': ['employee_number'],
            },
        ),
        migrations.CreateModel(
            name='EmployeeOffence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('offense_date', models.DateField()),
                ('applied_penalty', models.CharField(choices=[('ORAL', 'Oral Warning'), ('WRITTEN', 'Written Warning'), ('D005', '0.05 Day Deduction'), ('D010', '0.10 Day Deduction'), ('D015', '0.15 Day Deduction'), ('D025', '0.25 Day Deduction'), ('D030', '0.30 Day Deduction'), ('D050', '0.50 Day Deduction'), ('D075', '0.75 Day Deduction'), ('D100', '1 Day Deduction'), ('D200', '2 Days Deduction'), ('D300', '3 Days Deduction'), ('D500', '5 Days Deduction'), ('DISMISS', 'Dismissal')], max_length=10)),
                ('original_penalty', models.CharField(choices=[('ORAL', 'Oral Warning'), ('WRITTEN', 'Written Warning'), ('D005', '0.05 Day Deduction'), ('D010', '0.10 Day Deduction'), ('D015', '0.15 Day Deduction'), ('D025', '0.25 Day Deduction'), ('D030', '0.30 Day Deduction'), ('D050', '0.50 Day Deduction'), ('D075', '0.75 Day Deduction'), ('D100', '1 Day Deduction'), ('D200', '2 Days Deduction'), ('D300', '3 Days Deduction'), ('D500', '5 Days Deduction'), ('DISMISS', 'Dismissal')], max_length=10)),
                ('offense_count', models.PositiveIntegerField(default=1)),
                ('details', models.TextField()),
                ('warning_letter', models.FileField(blank=True, null=True, upload_to='offense_documents/')),
                ('acknowledgment', models.FileField(blank=True, null=True, upload_to='offense_documents/')),
                ('is_acknowledged', models.BooleanField(default=False)),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_offence_records', to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee_offence_records', to='employees.employee')),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modified_offence_records', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Employee Offense',
                'verbose_name_plural': 'Employee Offenses',
                'ordering': ['-offense_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('address', models.TextField()),
                ('code', models.CharField(max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='OffenseRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rule_id', models.CharField(max_length=20, unique=True)),
                ('group', models.CharField(choices=[('ATTENDANCE', 'Attendance'), ('BEHAVIOR', 'Behavior'), ('PERFORMANCE', 'Performance'), ('SAFETY', 'Safety'), ('PROPERTY', 'Property'), ('OTHER', 'Other')], max_length=20)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('first_penalty', models.CharField(choices=[('ORAL', 'Oral Warning'), ('WRITTEN', 'Written Warning'), ('D005', '0.05 Day Deduction'), ('D010', '0.10 Day Deduction'), ('D015', '0.15 Day Deduction'), ('D025', '0.25 Day Deduction'), ('D030', '0.30 Day Deduction'), ('D050', '0.50 Day Deduction'), ('D075', '0.75 Day Deduction'), ('D100', '1 Day Deduction'), ('D200', '2 Days Deduction'), ('D300', '3 Days Deduction'), ('D500', '5 Days Deduction'), ('DISMISS', 'Dismissal')], max_length=10)),
                ('second_penalty', models.CharField(choices=[('ORAL', 'Oral Warning'), ('WRITTEN', 'Written Warning'), ('D005', '0.05 Day Deduction'), ('D010', '0.10 Day Deduction'), ('D015', '0.15 Day Deduction'), ('D025', '0.25 Day Deduction'), ('D030', '0.30 Day Deduction'), ('D050', '0.50 Day Deduction'), ('D075', '0.75 Day Deduction'), ('D100', '1 Day Deduction'), ('D200', '2 Days Deduction'), ('D300', '3 Days Deduction'), ('D500', '5 Days Deduction'), ('DISMISS', 'Dismissal')], max_length=10)),
                ('third_penalty', models.CharField(choices=[('ORAL', 'Oral Warning'), ('WRITTEN', 'Written Warning'), ('D005', '0.05 Day Deduction'), ('D010', '0.10 Day Deduction'), ('D015', '0.15 Day Deduction'), ('D025', '0.25 Day Deduction'), ('D030', '0.30 Day Deduction'), ('D050', '0.50 Day Deduction'), ('D075', '0.75 Day Deduction'), ('D100', '1 Day Deduction'), ('D200', '2 Days Deduction'), ('D300', '3 Days Deduction'), ('D500', '5 Days Deduction'), ('DISMISS', 'Dismissal')], max_length=10)),
                ('fourth_penalty', models.CharField(choices=[('ORAL', 'Oral Warning'), ('WRITTEN', 'Written Warning'), ('D005', '0.05 Day Deduction'), ('D010', '0.10 Day Deduction'), ('D015', '0.15 Day Deduction'), ('D025', '0.25 Day Deduction'), ('D030', '0.30 Day Deduction'), ('D050', '0.50 Day Deduction'), ('D075', '0.75 Day Deduction'), ('D100', '1 Day Deduction'), ('D200', '2 Days Deduction'), ('D300', '3 Days Deduction'), ('D500', '5 Days Deduction'), ('DISMISS', 'Dismissal')], max_length=10)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Offense Rule',
                'verbose_name_plural': 'Offense Rules',
                'ordering': ['group', 'rule_id'],
            },
        ),
        migrations.CreateModel(
            name='OffenseDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document', models.FileField(upload_to='offense_documents/')),
                ('document_type', models.CharField(max_length=50)),
                ('notes', models.TextField(blank=True, null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('offense', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='employees.employeeoffence')),
            ],
            options={
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='LifeEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('MAR', 'Marriage'), ('CHD', 'Child Birth'), ('DEA', 'Death in Family'), ('OTH', 'Other')], max_length=3)),
                ('date', models.DateField()),
                ('description', models.TextField()),
                ('documents', models.FileField(blank=True, upload_to='life_event_documents/')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='life_events', to='employees.employee')),
            ],
        ),
        migrations.AddField(
            model_name='employeeoffence',
            name='rule',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='employees.offenserule'),
        ),
        migrations.CreateModel(
            name='EmployeeEducation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institution', models.CharField(default='Unknown Institution', max_length=100)),
                ('major', models.CharField(default='General', max_length=100)),
                ('degree', models.CharField(default='Unknown Degree', max_length=50)),
                ('graduation_year', models.IntegerField(default=2000)),
                ('gpa', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('description', models.TextField(blank=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='education', to='employees.employee')),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('PASSPORT', 'Passport'), ('RESIDENT', 'Resident Permit'), ('CPR', 'C.P.R'), ('GATE', 'Gate Pass'), ('CONTRACT', 'Contract'), ('CV', 'CV'), ('DRIVING', 'Driving License')], max_length=10)),
                ('document_number', models.CharField(max_length=50)),
                ('profession_title', models.CharField(blank=True, max_length=100, null=True, verbose_name='Profession / Title')),
                ('issue_date', models.DateField(blank=True, null=True)),
                ('issue_place', models.CharField(blank=True, max_length=100, null=True)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('other_info', models.TextField(blank=True, null=True)),
                ('document_file', models.FileField(blank=True, null=True, upload_to='employee_documents/%Y/%m/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'jpg', 'jpeg', 'png', 'doc', 'docx'])])),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='employees.employee')),
            ],
            options={
                'verbose_name': 'Employee Document',
                'verbose_name_plural': 'Employee Documents',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EmployeeDependent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('relation', models.CharField(choices=[('spouse', 'Spouse'), ('child', 'Child'), ('parent', 'Parent'), ('sibling', 'Sibling'), ('other', 'Other')], max_length=20)),
                ('date_of_birth', models.DateField()),
                ('passport_number', models.CharField(blank=True, max_length=50, null=True)),
                ('passport_expiry', models.DateField(blank=True, null=True)),
                ('cpr_number', models.CharField(blank=True, max_length=20, null=True)),
                ('cpr_expiry', models.DateField(blank=True, null=True)),
                ('valid_passage', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dependents', to='employees.employee')),
            ],
            options={
                'verbose_name': 'Employee Dependent',
                'verbose_name_plural': 'Employee Dependents',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='EmployeeBankAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank', models.CharField(max_length=100)),
                ('account_number', models.CharField(max_length=50)),
                ('iban', models.CharField(max_length=50, verbose_name='IBAN No')),
                ('transfer_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Amount to be Transferred')),
                ('is_primary', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bank_accounts', to='employees.employee')),
            ],
            options={
                'verbose_name': 'Employee Bank Account',
                'verbose_name_plural': 'Employee Bank Accounts',
                'ordering': ['-is_primary', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EmployeeAsset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asset_name', models.CharField(max_length=100)),
                ('asset_number', models.CharField(blank=True, max_length=50, null=True)),
                ('issue_date', models.DateField(default=django.utils.timezone.now)),
                ('return_date', models.DateField(blank=True, null=True)),
                ('condition', models.TextField(default='New')),
                ('return_condition', models.TextField(blank=True, null=True)),
                ('value', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('notes', models.TextField(blank=True, null=True)),
                ('return_notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('asset_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='assets', to='employees.assettype')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assets', to='employees.employee')),
            ],
            options={
                'verbose_name': 'Employee Asset',
                'verbose_name_plural': 'Employee Assets',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='employee',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='employees.location'),
        ),
        migrations.AddField(
            model_name='employee',
            name='profit_center',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='profit_center_employees', to='employees.costprofitcenter'),
        ),
        migrations.CreateModel(
            name='EmergencyContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('relationship', models.CharField(max_length=50)),
                ('phone_number', models.CharField(max_length=20)),
                ('alternative_phone', models.CharField(blank=True, max_length=20)),
                ('address', models.TextField(blank=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emergency_contacts', to='employees.employee')),
            ],
        ),
        migrations.CreateModel(
            name='DependentDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('PASSPORT', 'Passport'), ('CPR', 'CPR'), ('BIRTH_CERTIFICATE', 'Birth Certificate'), ('MARRIAGE_CERTIFICATE', 'Marriage Certificate'), ('OTHER', 'Other')], max_length=50)),
                ('document_number', models.CharField(blank=True, max_length=50, null=True)),
                ('name', models.CharField(max_length=255)),
                ('issue_date', models.DateField(blank=True, null=True)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('nationality', models.CharField(blank=True, choices=[('ALGERIAN', 'Algerian'), ('AMERICAN', 'American'), ('ARGENTINA', 'Argentina'), ('AUSTRALIAN', 'Australian'), ('BAHRAINI', 'Bahraini'), ('BANGLADESHI', 'Bangladeshi'), ('BELGIAN', 'Belgian'), ('BRAZILIAN', 'Brazilian'), ('BRITISH', 'British'), ('BULGARIAN', 'Bulgarian'), ('CAMEROONIAN', 'Cameroonian'), ('CANADIAN', 'Canadian'), ('CHILEAN', 'Chilean'), ('CHINESE', 'Chinese'), ('COLOMBIAN', 'Colombian'), ('CROATIAN', 'Croatian'), ('CUBAN', 'Cuban'), ('CYPRIOT', 'Cypriot'), ('CZECH', 'Czech'), ('DANISH', 'Danish'), ('DJIBOUTIAN', 'Djiboutian'), ('EGYPTIAN', 'Egyptian'), ('FILIPINO', 'Filipino'), ('FRENCH', 'French'), ('GERMAN', 'German'), ('GHANAIAN', 'Ghanaian'), ('GREEK', 'Greek'), ('DUTCH', 'Dutch'), ('HONG_KONGER', 'Hong Konger'), ('INDIAN', 'Indian'), ('INDONESIAN', 'Indonesian'), ('IRANIAN', 'Iranian'), ('IRAQI', 'Iraqi'), ('IRISH', 'Irish'), ('ITALIAN', 'Italian'), ('JAMAICAN', 'Jamaican'), ('JAPANESE', 'Japanese'), ('JORDANIAN', 'Jordanian'), ('KENYAN', 'Kenyan'), ('KUWAITI', 'Kuwaiti'), ('LEBANESE', 'Lebanese'), ('MALAWIAN', 'Malawian'), ('MALAYSIAN', 'Malaysian'), ('MEXICAN', 'Mexican'), ('MOROCCAN', 'Moroccan'), ('NEPALI', 'Nepali'), ('DUTCH', 'Dutch'), ('NEW_ZEALANDER', 'New Zealander'), ('NIGERIAN', 'Nigerian'), ('NORWEGIAN', 'Norwegian'), ('OMANI', 'Omani'), ('PAKISTANI', 'Pakistani'), ('POLISH', 'Polish'), ('PORTUGUESE', 'Portuguese'), ('RUSSIAN', 'Russian'), ('SAUDI', 'Saudi'), ('SCOTTISH', 'Scottish'), ('SERBIAN', 'Serbian'), ('SEYCHELLOIS', 'Seychellois'), ('SINGAPOREAN', 'Singaporean'), ('SOUTH_AFRICAN', 'South African'), ('SPANISH', 'Spanish'), ('SRI_LANKAN', 'Sri Lankan'), ('SUDANESE', 'Sudanese'), ('SWEDISH', 'Swedish'), ('SWISS', 'Swiss'), ('SYRIAN', 'Syrian'), ('TAIWANESE', 'Taiwanese'), ('TANZANIAN', 'Tanzanian'), ('THAI', 'Thai'), ('TUNISIAN', 'Tunisian'), ('TURKISH', 'Turkish'), ('EMIRATI', 'Emirati'), ('UGANDAN', 'Ugandan'), ('UKRAINIAN', 'Ukrainian'), ('VENEZUELAN', 'Venezuelan'), ('VIETNAMESE', 'Vietnamese'), ('YEMENI', 'Yemeni'), ('ZIMBABWEAN', 'Zimbabwean'), ('OTHER', 'Other')], max_length=50, null=True)),
                ('document_file', models.FileField(blank=True, null=True, upload_to='dependent_documents/')),
                ('status', models.CharField(default='active', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('dependent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='employees.employeedependent')),
            ],
        ),
    ]
